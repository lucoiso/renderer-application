name: CMake Build Workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release
  BUILD_TESTS: false # This application doesn't contain tests at the moment, will re-enable after implementations
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  OUTPUT_DIRECTORY: build/bin
  CONAN_PRESET: conan-release
  CONAN_PROFILE: Profiles/WinRel

permissions:
  actions: read
  deployments: write
  contents: write
  id-token: write
  security-events: write

jobs:
  build_project:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest ] # , ubuntu-latest, macos-latest

    steps:
      - name: Checkout & Init Submodules
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: Get CMake and Ninja
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: latest
          ninjaVersion: latest

      - name: Install Conan
        id: conan
        uses: turtlebrowser/get-conan@main

      - name: Setup Conan Profile
        working-directory: ${{github.workspace}}
        run: conan profile detect --force

      - name: Get Packages from Conan
        working-directory: ${{github.workspace}}
        run: conan install . --build=missing --profile=${{env.CONAN_PROFILE}}

      - name: Install Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@v1.2.0
        with:
          vulkan-query-version: latest
          vulkan-components: Vulkan-Headers
          vulkan-use-cache: true

      - name: Configure and Build Project
        uses: lukka/run-cmake@v10
        with:
          cmakeListsTxtPath: '${{github.workspace}}/CMakeLists.txt'
          configurePreset: ${{env.CONAN_PRESET}}
          buildPreset: ${{env.CONAN_PRESET}}
