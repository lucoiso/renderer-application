# Author: Lucas Vilas-Boas
# Year: 2024
# Repo: https://github.com/lucoiso/vulkan-renderer

# ----------- Global Definitions -----------
SET(LIBRARY_NAME UserInterface)

# ------------- Library Setup --------------
SET(PRIVATE_MODULES_BASE_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/Source/Private)
SET(PUBLIC_MODULES_BASE_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/Source/Public)

FILE(GLOB_RECURSE PRIVATE_MODULES "${PRIVATE_MODULES_BASE_DIRECTORY}/*.cxx")
FILE(GLOB_RECURSE PUBLIC_MODULES "${PUBLIC_MODULES_BASE_DIRECTORY}/*.ixx")

ADD_LIBRARY(${LIBRARY_NAME} SHARED ${PRIVATE_MODULES})
SET_TARGET_PROPERTIES(${LIBRARY_NAME} PROPERTIES LINKER_LANGUAGE CXX)

TARGET_SOURCES(${LIBRARY_NAME}
        PUBLIC
        FILE_SET cxx_public_modules
        TYPE CXX_MODULES
        BASE_DIRS ${PUBLIC_MODULES_BASE_DIRECTORY}
        FILES ${PUBLIC_MODULES}
)

FILE(GLOB_RECURSE PUBLIC_HEADERS "${PUBLIC_MODULES_BASE_DIRECTORY}/*.hpp")

TARGET_SOURCES(${LIBRARY_NAME}
        PUBLIC
        FILE_SET cxx_public_headers
        TYPE HEADERS
        BASE_DIRS ${PUBLIC_MODULES_BASE_DIRECTORY}
        FILES ${PUBLIC_HEADERS}
)

TARGET_INCLUDE_DIRECTORIES(${LIBRARY_NAME} PRIVATE ${PRIVATE_MODULES_BASE_DIRECTORY})
TARGET_INCLUDE_DIRECTORIES(${LIBRARY_NAME} PUBLIC ${PUBLIC_MODULES_BASE_DIRECTORY})

IF (CMAKE_BUILD_TYPE MATCHES "Debug")
    TARGET_LINK_LIBRARIES(${LIBRARY_NAME} PRIVATE $ENV{VULKAN_SDK}/Lib/volkd.lib)
ELSE ()
    TARGET_LINK_LIBRARIES(${LIBRARY_NAME} PRIVATE $ENV{VULKAN_SDK}/Lib/volk.lib)
ENDIF ()

TARGET_INCLUDE_DIRECTORIES(${LIBRARY_NAME} PRIVATE $ENV{VULKAN_SDK}/Include)

FIND_PACKAGE(Boost REQUIRED COMPONENTS log)
FIND_PACKAGE(imgui CONFIG REQUIRED)
FIND_PACKAGE(easy_profiler REQUIRED)

TARGET_LINK_LIBRARIES(${LIBRARY_NAME} PRIVATE
        RadeonManager
)

TARGET_LINK_LIBRARIES(${LIBRARY_NAME} PUBLIC
        Boost::log
        imgui::imgui
        RenderCore
        easy_profiler
)

INCLUDE(GNUInstallDirs)
INSTALL(TARGETS ${LIBRARY_NAME}
        BUNDLE DESTINATION .
        LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
        RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
)

INCLUDE(FetchContent)

FETCHCONTENT_DECLARE(
        gltf_samples
        GIT_REPOSITORY https://github.com/KhronosGroup/glTF-Sample-Assets
        GIT_TAG main
)
FETCHCONTENT_MAKEAVAILABLE(gltf_samples)

ADD_CUSTOM_COMMAND(TARGET ${LIBRARY_NAME} POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy_directory_if_different "${gltf_samples_SOURCE_DIR}/Models"
        "$<TARGET_FILE_DIR:${LIBRARY_NAME}>/Models"
)