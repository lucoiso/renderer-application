# Author: Lucas Vilas-Boas
# Year: 2024
# Repo: https://github.com/lucoiso/VulkanRenderer

# ----------- Global Definitions -----------
SET(LIBRARY_NAME Application)

# ------------- Library Setup --------------
SET(PRIVATE_MODULES_BASE_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/Source/Private)
SET(PUBLIC_MODULES_BASE_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/Source/Public)

SET(PRIVATE_MODULES
        ${PRIVATE_MODULES_BASE_DIRECTORY}/Main.cpp
        ${PRIVATE_MODULES_BASE_DIRECTORY}/AppWindow.cxx
        ${PRIVATE_MODULES_BASE_DIRECTORY}/AppViewport.cxx
        ${PRIVATE_MODULES_BASE_DIRECTORY}/AppScenePanel.cxx
        ${PRIVATE_MODULES_BASE_DIRECTORY}/AppStatusPanel.cxx
        ${PRIVATE_MODULES_BASE_DIRECTORY}/AppRadeonProfiler.cxx
)

SET(PUBLIC_MODULES
        ${PUBLIC_MODULES_BASE_DIRECTORY}/AppWindow.ixx
        ${PUBLIC_MODULES_BASE_DIRECTORY}/AppViewport.ixx
        ${PUBLIC_MODULES_BASE_DIRECTORY}/AppScenePanel.ixx
        ${PUBLIC_MODULES_BASE_DIRECTORY}/AppStatusPanel.ixx
        ${PUBLIC_MODULES_BASE_DIRECTORY}/AppRadeonProfiler.ixx
)

ADD_EXECUTABLE(${LIBRARY_NAME} ${PRIVATE_MODULES} ${PUBLIC_MODULES})
SET_TARGET_PROPERTIES(${LIBRARY_NAME} PROPERTIES LINKER_LANGUAGE CXX)

TARGET_SOURCES(${LIBRARY_NAME}
        PUBLIC
        FILE_SET cxx_public_modules
        TYPE CXX_MODULES
        BASE_DIRS ${PUBLIC_MODULES_BASE_DIRECTORY}
        FILES ${PUBLIC_MODULES}
)

TARGET_INCLUDE_DIRECTORIES(${LIBRARY_NAME} PRIVATE ${PRIVATE_MODULES_BASE_DIRECTORY})

IF (CMAKE_BUILD_TYPE MATCHES "Debug")
    TARGET_LINK_LIBRARIES(${LIBRARY_NAME} PRIVATE $ENV{VULKAN_SDK}/Lib/volkd.lib)
ELSE ()
    TARGET_LINK_LIBRARIES(${LIBRARY_NAME} PRIVATE $ENV{VULKAN_SDK}/Lib/volk.lib)
ENDIF ()

TARGET_INCLUDE_DIRECTORIES(${LIBRARY_NAME} PRIVATE $ENV{VULKAN_SDK}/Include)

FIND_PACKAGE(Boost REQUIRED COMPONENTS log)
FIND_PACKAGE(imgui CONFIG REQUIRED)

TARGET_LINK_LIBRARIES(${LIBRARY_NAME} PRIVATE
        Boost::log

        imgui::imgui
        ImGui-Backend

        RuntimeInfo
        RadeonManager
)

TARGET_LINK_LIBRARIES(${LIBRARY_NAME} PUBLIC
        RenderCore
)

INCLUDE(GNUInstallDirs)
INSTALL(TARGETS ${LIBRARY_NAME}
        BUNDLE DESTINATION .
        LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
        RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
)
